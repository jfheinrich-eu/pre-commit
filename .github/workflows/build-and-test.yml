name: Build, Test Docker image
permissions:
  contents: read
  packages: read
  security-events: write

on:
  push:
    branches-ignore:
      - main
      - develop

jobs:

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Get GitHub Registry Secrets
        id: github-registry-secrets
        uses: jfheinrich-eu/psono-secret-whisperer@v1.0.0
        with:
          ci_api_key_id: ${{ secrets.PSONO_API_KEY_ID }}
          ci_api_secret_key_hex: ${{ secrets.PSONO_API_SECRET_KEY_HEX }}
          ci_server_url: ${{ vars.PSONO_SERVER_URL }}
          secret_id: ${{ secrets.PSONO_GITHUB_REGISTRY_ID }}
          secret_type: 'env'
          secret_fields: "CI_REGISTRY,CI_REGISTRY_USER,CI_REGISTRY_PASSWORD"
          mask_secrets: CI_REGISTRY_USER,CI_REGISTRY_PASSWORD

      - name: Get GitHub Token
        id: github-token
        uses: jfheinrich-eu/psono-secret-whisperer@v1.0.0
        with:
          ci_api_key_id: ${{ secrets.PSONO_API_KEY_ID }}
          ci_api_secret_key_hex: ${{ secrets.PSONO_API_SECRET_KEY_HEX }}
          ci_server_url: ${{ vars.PSONO_SERVER_URL }}
          secret_id: ${{ secrets.PSONO_GITHUB_CLI_TOKEN }}
          secret_type: 'secret'
          secret_fields: "password"
          mask_secrets: password

      - id: setup-secrets
        name: Setup secrets
        env:
          GITHUB_CI_REGISTRY: ${{ steps.github-registry-secrets.outputs.secret1 }}
        run: |
          echo "cs_image_build=${GITHUB_CI_REGISTRY}/${GITHUB_REPOSITORY}:build" >> "$GITHUB_OUTPUT"
          echo "build_date=$(date --iso-8601=seconds)" >> "$GITHUB_OUTPUT"
          echo "build_version=${GITHUB_REF_NAME}.${GITHUB_SHA:0:8}" >> "$GITHUB_OUTPUT"

      - id: docker-login
        name: Docker Login
        uses: docker/login-action@v3.4.0
        with:
            registry: ${{ steps.github-registry-secrets.outputs.secret1 }}
            username: ${{ steps.github-registry-secrets.outputs.secret2 }}
            password: ${{ steps.github-token.outputs.secret1 }}
            ecr: auto
            logout: true

      - name: Set up Docker buildx
        id: setup-docker-buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Build and load
        uses: docker/build-push-action@v6.15.0
        with:
          context: ./src
          platforms: linux/amd64
          load: true
          tags: ${{ steps.setup-secrets.outputs.cs_image_build }}
          build-args: |
            BUILD_DATE=${{ steps.setup-secrets.outputs.build_date }}
            VERSION=${{ steps.setup-secrets.outputs.build_version }}

      - name: Scan for vulnerabilities
        id: scan
        uses: crazy-max/ghaction-container-scan@v3.1.0
        with:
          image: ${{ steps.setup-secrets.outputs.cs_image_build }}
          dockerfile: ./src/Dockerfile
          github_token: ${{ steps.github-token.outputs.secret1 }}
          annotations: true
          severity_threshold: MEDIUM

      - name: Upload SARIF file
        if: ${{ steps.scan.outputs.sarif != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Build and push
        uses: docker/build-push-action@v6.15.0
        with:
          context: ./src
          # depends on the base image python: 3-alpine3.21
          platforms: linux/386, linux/amd64, linux/arm/v6
          push: true
          tags: ${{ steps.setup-secrets.outputs.cs_image_build }}
          build-args: |
            BUILD_DATE=${{ steps.setup-secrets.outputs.build_date }}
            VERSION=${{ steps.setup-secrets.outputs.build_version }}
