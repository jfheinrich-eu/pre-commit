name: Build, Test Docker image

on:
  push:
    branches-ignore:
      - main
      - develop

jobs:

  secrets:
    uses: jfheinrich-eu/reusable-workflows/.github/workflows/secrets-github-registry.yml@master

  build:
    needs: secrets
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - id: docker-login
        name: Docker Login
        uses: docker/login-action@v3.4.0
        with:
            registry: ${{ needs.secrets.outputs.CI_REGISTRY }}
            username: ${{ needs.secrets.outputs.CI_REGISTRY_USER }}
            password: ${{ needs.secrets.outputs.CI_REGISTRY_PASSWORD }}
            ecr: auto
            logout: true

      - name: Set up Docker buildx
        id: seup-docker-buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Build and load
        uses: docker/build-push-action@v6.15.0
        with:
          context: ./src
          platforms: linux/amd64
          load: true
          tags: ${{ needs.secrets.outputs.CS_IMAGE_BUILD }}
          build-args: (BUILD_DATE=${{ needs.secrets.outputs.BUILD_DATE }}, VERSION=${{ needs.secrets.outputs.BUILD_VERSION }})

      - name: Scan for vulnerabilities
        id: scan
        uses: crazy-max/ghaction-container-scan@v3.1.0
        with:
          image: ${{ needs.secrets.outputs.CS_IMAGE_BUILD }}
          dockerfile: ./src/Dockerfile
          github_token: ${{ needs.secrets.outputs.CI_GITHUB_TOKEN }}

      - name: Upload SARIF file
        if: ${{ steps.scan.outputs.sarif != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Build and push
        uses: docker/build-push-action@v6.15.0
        with:
          context: ./src
          # depends on the base image python: 3-alpine3.21
          platforms: linux/386, linux/amd64, linux/arm/v6
          push: true
          tags: ${{ needs.secrets.outputs.CS_IMAGE_BUILD }}
          build-args: (BUILD_DATE=${{ needs.secrets.outputs.BUILD_DATE }}, VERSION=${{ needs.secrets.outputs.BUILD_VERSION }})
