create-changelog:
  stage: release
  image: registry.gitlab.com/gitlab-ci-utils/curl-jq:latest
  variables:
    CHANGELOG_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/repository/changelog?version=${CI_COMMIT_TAG}"
    CHANGELOG_COMMIT_MESSAGE: "Add changelog for ${CI_COMMIT_TAG}"
  before_script:
    - apk add --update sed
  script:
    - 'curl -H "PRIVATE-TOKEN: ${PAT}" "${CHANGELOG_URL}" | jq -r .notes > release_notes.md'
    - 'curl -H "PRIVATE-TOKEN: ${PAT}" -X POST --data "message=${CHANGELOG_COMMIT_MESSAGE}; [skip ci]" "${CHANGELOG_URL}"'
    - 'RELEASE_NOTES="$(sed -z ''s/\r*\n/<br>/g'' release_notes.md)"  && echo "RELEASE_NOTES=\"${RELEASE_NOTES}\"" >> variables.env'
  artifacts:
    reports:
      dotenv: variables.env
  rules:
    - if: $CI_COMMIT_BRANCH
      when: never
    - if: $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/

update-build-version:
  stage: release
  image: docker
  variables:
    REPOSITORY_URL: "https://gitlab-ci-token:${PAT}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
    COMMIT_MESG: "update build version [skip-ci]"
    GIT_USER_EMAIL: "joerg@jfheinrich.eu"
    GIT_USER_NAME: "ci-bot"
  before_script:
    - apk add --update git
  script:
    - echo "${GitVersion_MajorMinorPatch}" > .build-version
    - git config user.email "${GIT_USER_EMAIL}"
    - git config user.name "${GIT_USER_NAME}"
    - git add .build-version
    - git commit -m "${COMMIT_MESG}"
    - git push HEAD:$CI_COMMIT_REF_NAME
  rules:
    - if: $CI_COMMIT_BRANCH
      when: never
    - if: $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/
