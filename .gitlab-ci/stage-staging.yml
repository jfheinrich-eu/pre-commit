prepare-staging:
  extends:
    - .prepare_psono
  stage: staging
  script:
    - 'echo "CI_PSONO_REGISTRY=$(./psonoci -c ./.psonoci.toml env-vars get-or-create ${PSONO_GITLAB_CONTAINER_REGISTRY} CI_REGISTRY)" >> variables.env'
    - 'echo "CI_PSONO_REGISTRY_PASSWORD=$(./psonoci -c ./.psonoci.toml env-vars get-or-create ${PSONO_GITLAB_CONTAINER_REGISTRY} CI_REGISTRY_PASSWORD)" >> variables.env'
    - 'echo "CI_PSONO_REGISTRY_USER=$(./psonoci -c ./.psonoci.toml env-vars get-or-create ${PSONO_GITLAB_CONTAINER_REGISTRY} CI_REGISTRY_USER)" >> variables.env'
  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'
  artifacts:
    reports:
      dotenv: variables.env

staging:
  stage: staging
  image: docker
  tags:
    - saas-linux-small-amd64
  needs:
    - job: prepare-staging
      optional: false
      artifacts: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'
      when: manual
  services:
    - docker:dind
  before_script:
    - apk add --update make
    - echo "${CI_PSONO_REGISTRY_PASSWORD}" | docker login $CI_PSONO_REGISTRY -u $CI_PSONO_REGISTRY_USER --password-stdin
  script:
    - make ci-build-staging
  after_script:
    - docker logout $CI_PSONO_REGISTRY
  environment:
    name: staging
