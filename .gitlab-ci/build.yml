container_scanning:
  variables:
    CS_IMAGE: ${CI_PSONO_REGISTRY}/jfheinrich-dev/pre-commit:build
    GIT_STRATEGY: fetch

include:
  - template: Jobs/Container-Scanning.gitlab-ci.yml
    rules:
      - if: $CI_COMMIT_BRANCH
      - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

prepare-build:
  extends:
    - .prepare_psono
  stage: build
  script:
    - 'echo "CI_PSONO_REGISTRY=$(./psonoci -c ./.psonoci.toml env-vars get-or-create ${PSONO_GITLAB_CONTAINER_REGISTRY} CI_REGISTRY)" >> variables.env'
    - 'echo "CI_PSONO_REGISTRY_PASSWORD=$(./psonoci -c ./.psonoci.toml env-vars get-or-create ${PSONO_GITLAB_CONTAINER_REGISTRY} CI_REGISTRY_PASSWORD)" >> variables.env'
    - 'echo "CI_PSONO_REGISTRY_USER=$(./psonoci -c ./.psonoci.toml env-vars get-or-create ${PSONO_GITLAB_CONTAINER_REGISTRY} CI_REGISTRY_USER)" >> variables.env'
    - 'echo "CI_REGISTRY=$(./psonoci -c ./.psonoci.toml env-vars get-or-create ${PSONO_GITLAB_CONTAINER_REGISTRY} CI_REGISTRY)" >> variables.env'
    - 'echo "CI_REGISTRY_PASSWORD=$(./psonoci -c ./.psonoci.toml env-vars get-or-create ${PSONO_GITLAB_CONTAINER_REGISTRY} CI_REGISTRY_PASSWORD)" >> variables.env'
    - 'echo "CI_REGISTRY_USER=$(./psonoci -c ./.psonoci.toml env-vars get-or-create ${PSONO_GITLAB_CONTAINER_REGISTRY} CI_REGISTRY_USER)" >> variables.env'
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  artifacts:
    reports:
      dotenv: variables.env

build:
  stage: build
  image: docker
  tags:
    - saas-linux-small-amd64
  needs:
    - job: prepare-build
      optional: false
      artifacts: true
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  services:
    - docker:dind
  before_script:
    - apk add --update make
    - echo "${CI_PSONO_REGISTRY_PASSWORD}" | docker login $CI_PSONO_REGISTRY -u $CI_PSONO_REGISTRY_USER --password-stdin
  script:
    - make -e build_date=$(date -Iseconds) ci-build
  after_script:
    - docker logout $CI_PSONO_REGISTRY
