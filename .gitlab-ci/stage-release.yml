create-release-tag:
  stage: release
  image: registry.gitlab.com/gitlab-ci-utils/curl-jq:latest
  variables:
    CREATE_TAG_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/repository/tags?tag_name=${GitVersion_MajorMinorPatch}&ref=${CI_COMMIT_BRANCH}&message=v${GitVersion_MajorMinorPatch}"
    tag: "${GitVersion_MajorMinorPatch}"
  script:
    - 'curl --request POST --header "PRIVATE-TOKEN: ${PAT}" --url "${CREATE_TAG_URL}"'
    - 'curl --fail --request POST --form token=$TRIGGER_TOKEN --form ref=${tag} "${CI_API_V4_URL}/projects/${CI_PROJECT_TRIGGER}/trigger/pipeline"'
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == 'main'

create-changelog:
  stage: release
  image: registry.gitlab.com/gitlab-ci-utils/curl-jq:latest
  variables:
    CHANGELOG_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/repository/changelog?version=${CI_COMMIT_TAG}"
    CHANGELOG_COMMIT_MESSAGE: "Add changelog for ${CI_COMMIT_TAG}"
  before_script:
    - apk add --update sed
  script:
    - 'curl -H "PRIVATE-TOKEN: ${PAT}" "${CHANGELOG_URL}" | jq -r .notes > release_notes.md'
    - 'curl -H "PRIVATE-TOKEN: ${PAT}" -X POST --data "message=${CHANGELOG_COMMIT_MESSAGE}; [skip ci]" "${CHANGELOG_URL}"'
    - 'RELEASE_NOTES="$(sed -z ''s/\r*\n/<br>/g'' release_notes.md)"  && echo "RELEASE_NOTES=\"${RELEASE_NOTES}\"" >> variables.env'
  after_script:
    - echo "${GitVersion_MajorMinorPatch}" > .build-version
    - git config user.email "joerg@jfheinrich.eu"
    - git config user.name "ci-bot"
    - git remote set-url --push origin "https://gitlab-ci-token:${PAT}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
    - git add .build-version
    - 'git commit -m "update build version [skip-ci]"'
    - git push origin HEAD:$CI_COMMIT_REF_NAME
  artifacts:
    reports:
      dotenv: variables.env
  rules:
    - if: $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/

release_job:
  stage: release
  needs:
    - job: create-changelog
      optional: false
      artifacts: true
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/
  script:
    - echo "running release_job for $CI_COMMIT_TAG"
  release:
    name: "Release $CI_COMMIT_TAG"
    description: "${RELEASE_NOTES}"
    tag_name: "$CI_COMMIT_TAG"
    ref: "$CI_COMMIT_SHA"
